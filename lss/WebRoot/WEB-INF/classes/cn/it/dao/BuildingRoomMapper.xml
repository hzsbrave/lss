<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.it.dao.BuildingRoomMapper" >
  <resultMap id="BaseResultMap" type="cn.it.entity.BuildingRoom" >
    <id column="tbr_id" property="tbrId" jdbcType="INTEGER" />
    <result column="building_id" property="buildingId" jdbcType="INTEGER" />
    <result column="room_id" property="roomId" jdbcType="INTEGER" />
    <result column="num" property="num" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="BuildingBaseResultMap" type="cn.it.entity.Building" >
    <id column="building_id" property="buildingId" jdbcType="INTEGER" />
    <result column="building_name" property="buildingName" jdbcType="VARCHAR" />
    <result column="building_address" property="buildingAddress" jdbcType="VARCHAR" />
    <result column="building_manager" property="buildingManager" jdbcType="VARCHAR" />
    <result column="building_phone" property="buildingPhone" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="RoomBaseResultMap" type="cn.it.entity.Room" >
    <id column="room_id" property="roomId" jdbcType="INTEGER" />
    <result column="room_name" property="roomName" jdbcType="VARCHAR" />
    <result column="room_type" property="roomType" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    tbr_id, building_id, room_id, num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.it.entity.BuildingRoomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_building_room
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectBuildingRoom" resultMap="BaseResultMap" parameterType="cn.it.entity.BuildingRoom">
  	SELECT
		tbr.tbr_id
	FROM
		t_building_room tbr,
		t_building tb,
		t_room tr
	WHERE
		tbr.building_id = tb.building_id
	AND tbr.room_id = tr.room_id
	AND tb.building_id = #{buildingId,jdbcType=INTEGER}
	AND tr.room_id = #{roomId,jdbcType=INTEGER}
  </select>
  <select id="selectBuilding" resultMap="BuildingBaseResultMap" parameterType="cn.it.entity.Building">
  	SELECT
		tb.*
	FROM
	(
		SELECT DISTINCT
			(tbr.building_id) id
		FROM
			t_building_room tbr
	) t,t_building tb
	WHERE
		t.id = tb.building_id
  </select>  
  
  <select id="selectRoomByBuilding" resultMap="RoomBaseResultMap" parameterType="java.lang.Integer">
	SELECT
		tr.*
	FROM
		t_building_room tbr,
		t_building tb,
		t_room tr
	WHERE
		tbr.building_id = tb.building_id
	AND tbr.room_id = tr.room_id
	AND tb.building_id = #{buildingId,jdbcType=INTEGER}	
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_building_room
    where tbr_id = #{tbrId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_building_room
    where tbr_id = #{tbrId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.it.entity.BuildingRoomExample" >
    delete from t_building_room
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.it.entity.BuildingRoom" >
    insert into t_building_room (tbr_id, building_id, room_id, 
      num)
    values (#{tbrId,jdbcType=INTEGER}, #{buildingId,jdbcType=INTEGER}, #{roomId,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.it.entity.BuildingRoom" >
    insert into t_building_room
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tbrId != null" >
        tbr_id,
      </if>
      <if test="buildingId != null" >
        building_id,
      </if>
      <if test="roomId != null" >
        room_id,
      </if>
      <if test="num != null" >
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tbrId != null" >
        #{tbrId,jdbcType=INTEGER},
      </if>
      <if test="buildingId != null" >
        #{buildingId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.it.entity.BuildingRoomExample" resultType="java.lang.Integer" >
    select count(*) from t_building_room
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_building_room
    <set >
      <if test="record.tbrId != null" >
        tbr_id = #{record.tbrId,jdbcType=INTEGER},
      </if>
      <if test="record.buildingId != null" >
        building_id = #{record.buildingId,jdbcType=INTEGER},
      </if>
      <if test="record.roomId != null" >
        room_id = #{record.roomId,jdbcType=INTEGER},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_building_room
    set tbr_id = #{record.tbrId,jdbcType=INTEGER},
      building_id = #{record.buildingId,jdbcType=INTEGER},
      room_id = #{record.roomId,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.it.entity.BuildingRoom" >
    update t_building_room
    <set >
      <if test="buildingId != null" >
        building_id = #{buildingId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null" >
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where tbr_id = #{tbrId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.it.entity.BuildingRoom" >
    update t_building_room
    set building_id = #{buildingId,jdbcType=INTEGER},
      room_id = #{roomId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER}
    where tbr_id = #{tbrId,jdbcType=INTEGER}
  </update>
</mapper>